from aiogram import F, types, Router, Dispatcher
from aiogram.filters import Command
from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardRemove
)
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import logging
from typing import Dict, Tuple, Optional
from Profile import ensure_user_exists
from user_manager import UserManager

logger = logging.getLogger(__name__)
router = Router(name="start_router")

class SupportStates(StatesGroup):
    WAITING_FOR_QUESTION = State()
    ANSWERING_QUESTION = State()

@router.message(Command("start"))
async def start_handler(message: types.Message, state: FSMContext, user_manager: UserManager):
    await ensure_user_exists(message)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets
    if user_manager:
        user = user_manager.get_user(message.from_user.id)
        if not user:
            user_manager.add_user(
                telegram_id=message.from_user.id,
                username=message.from_user.username or '',
                trial_limit='no use'
            )
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ Google Sheets")
        else:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} —É–∂–µ –µ—Å—Ç—å –≤ Google Sheets")
    else:
        logger.error("UserManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ start_handler! –≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.")

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="üõí –ö—É–ø–∏—Ç—å VPN")],
            [types.KeyboardButton(text="üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å VPN")],
            [types.KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
            [types.KeyboardButton(text="üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")],
        ],
        resize_keyboard=True
    )
    
    welcome_message = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GhostLink VPN!\n\n"
        "üîí –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏ –±—ã—Å—Ç—Ä–æ–µ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\n\n"
        "üéÅ –£ –≤–∞—Å –µ—Å—Ç—å 3 –¥–Ω—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    
    await message.answer(welcome_message, reply_markup=keyboard)


def register_start_module(dp: Dispatcher):
    dp.include_router(router)
